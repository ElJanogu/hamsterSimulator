/*imperative program*//*

- vor()      - void
- linksUm()  - void
- nimm()     - void
- gib()      - void
- vornFrei() - boolean
- kornDa()   - boolean
- maulLeer() - boolean

- boolean
- byte, short, int, long
- float, double
- char, String

- if(){}else if(){}else{}
- while(){}
- for(){}

*/

void main()
{
	vor(); // Hamster geht ein Feld vor
	if(kornDa()) nimm(); // Wenn ein Korn auf dem Feld -> Nimm Korn auf
	
	vor(); // Hamster geht ein Feld vor
	if(kornDa())	{ nimm(); } // Wenn ein Korn auf dem Feld -> Nimm Korn auf
	else { // ... ansonsten
		linksUm(); // Hamster dreht sich nach links
		linksUm(); // Hamster dreht sich nach links
		linksUm(); // Hamster dreht sich nach links
	}
	
	vor(); // Hamster geht ein Feld vor
	if(kornDa()) // Wenn sich ein Korn auf dem Feld befindet ....
	{
		nimm(); // Hamster nimmt das Korn auf
	}
	else // ..ansinsten
	{
		linksUm(); // Hamster dreht sich nach links
		linksUm(); // Hamster dreht sich nach links
		linksUm(); // Hamster dreht sich nach links
		linksUm(); // Hamster dreht sich nach links
	}

	/*
	
	wenn ... sonst wenn ... sonst
	
	if (BEDINGUNG[EN])
	{
		ANWEISUNG[EN];
	} 
	else if (BEDINGUNG[EN])
	{
		ANWEISUNG[EN];
	}
	else 
	{
		ANWEISUNG[EN];
	}
	*/
	
	vor(); // Hamster geht ein Feld vor
	while(kornDa()) nimm(); // solange ein Korn auf dem Feld ist -> Hamster nimmt Korn auf
	
	vor(); // Hamster geht ein Feld vor
	while(kornDa())  // solange ein Korn auf dem Feld ist....
	{
		nimm(); // Hamster nimmt das Korn auf
	}
	
	/*
	
	solange ...
	
	while (BEDINGUNG[EN])
	{
		ANWEISUNG[EN];
	}
	
	do
	{
		ANWEISUNG[EN];
	}
	while (BEDINGUNG[EN]);
	
	*/
	
	vor(); // Hamster geht ein Feld vor
	for(int i = 0; i < 3; i++)
	{
		nimm(); // Hamster nimmt das Korn auf
	}
	
	vor(); // Hamster geht ein Feld vor
	int a; // Deklariere Variable a von Typ int
	for(a = 0; a < 2;)
	{
		nimm(); // Hamster nimmt das Korn auf
		a++; // Inkrementiere a um den Wert 1
	}
	
	vor(); // Hamster geht ein Feld vor
	int b = 0; ///Deklarierung und Initialisierung der (int) Variable b
	for(; b <= 3; b++)
	{
		nimm(); // Hamster nimmt das Korn auf
	}
	
	/*
	for(INITIALISIERUNG; BEDINGUNG[EN]; UPDATE)
	{
		ANWEISUNG[EN];
	}
	*/
	
	//////////////////////////////////////////
	
	/*
	int a ...
	boolean b ...
	
	(a > 4 && !b) -> a groesser 4 und b ist false
	(a == 0 || b) -> a ist gleich 0 oder b ist true
	
	((a > 3 && b)||(a <= -4 && !b)) ...
	*/
}




